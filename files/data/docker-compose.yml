version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file: [.env]
    environment:
      - TZ=${TZ}
    volumes:
      - /data/pgdata:/var/lib/postgresql/data
    ports: ["${PRIVATE_IP}:5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    env_file: [.env]
    command: ["redis-server","--appendonly","yes","--appendfsync","everysec","--requirepass","${REDIS_PASSWORD}"]
    volumes:
      - /data/redisdata:/data
    ports: ["${PRIVATE_IP}:6379:6379"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$$REDIS_PASSWORD\" ping | grep -q PONG"]
      interval: 10s
      timeout: 3s
      retries: 10
    logging:
      driver: json-file
      options: { max-size: "20m", max-file: "3" }

  mongo:
    image: mongo:7
    restart: unless-stopped
    command: ["--bind_ip_all","--auth"]
    env_file: [.env]
    environment:
      - TZ=${TZ}
    volumes:
      - /data/mongodata:/data/db
    ports: ["${PRIVATE_IP}:27017:27017"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mongosh --quiet -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --eval 'db.runCommand({ ping: 1 }).ok' admin | grep -q 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 15
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }